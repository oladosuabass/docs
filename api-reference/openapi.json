{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Contextlm",
    "description": "ContextLM API endpoints",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://api.contextlm.ai"
    }
  ],

  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/v1/all_voices": {
      "get": {
        "description": "Returns all voices available for synthesis",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AllVoices"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/generate_speech": {
      "post": {
        "description": "Generates speech based on a given plant",
        "requestBody": {
          "description": "Plant to use for speech synthesis",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateSpeech"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateSpeechResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Occurs when parameters are invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateSpeechError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Occurs when API key is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateSpeechError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Occurs when API key is valid but user does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateSpeechError"
                }
              }
            }
          },
          "404": {
            "description": "Not found. Occurs when requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateSpeechError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateSpeechError"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/plant/webhook": {
      "post": {
        "description": "Information about a new plant added to the store",
        "requestBody": {
          "description": "Plant added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AllVoices": {
        "type": "object",
        "properties": {
          "voices": {
            "description": "An array of all available voices.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GenerateSpeech": {
        "allOf": [
          {
            "required": ["text", "voice_id"],
            "type": "object",
            "properties": {
              "text": {
                "description": "The text input to be converted to speech",
                "type": "string"
              },
              "voice_id": {
                "description": "The voice id to use in speech synthesis",
                "type": "string"
              },
              "pitch": {
                "description": "Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
                "type": "number",
                "default": 0.0,
                "minimum": -20.0,
                "maximum": 20.0
              },

              "speaking_rate": {
                "description": "Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. Any other values < 0.25 or > 4.0 will return an error.",
                "type": "number",
                "default": 1.0,
                "minimum": 0.25,
                "maximum": 4.0
              },
              "output_format": {
                "description": "The format of the audio byte stream. LINEAR16 a.k.a WAV is the best for audio quality.",
                "type": "string",
                "default": "LINEAR16",
                "enum": ["LINEAR16", "MP3", "OGG_OPUS", "MULAW"]
              }
            }
          }
        ]
      },
      "GenerateSpeechResponse": {
        "type": "object",
        "properties": {
          "audiobytes": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "GenerateSpeechError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "type": "string"
          }
        }
      },

      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
